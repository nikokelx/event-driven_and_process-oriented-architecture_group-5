version: "3"

services:
  zookeeper:
    image: "bitnami/zookeeper:latest"
    hostname: zookeeper
    networks:
      - cira-network
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: 'yes'

  kafka:
    image: "bitnami/kafka:latest"
    hostname: kafka
    container_name: kafka
    networks:
      - cira-network
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  
  database-factory:
    container_name: db_factory
    hostname: db_factory
    image: postgres:alpine
    ports:
      - 5431:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test123!
    volumes:
      - ./factory/factory_db.sql:/docker-entrypoint-initdb.d/factory_db.sql
    networks:
      - cira-network
  
  database-warehouse:
    container_name: db_warehouse
    hostname: db_warehouse
    image: postgres:alpine
    ports:
      - 5433:5432
    volumes:
      - db-warehouse:/Library/PostgreSQL/15/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test123!
      - POSTGRES_DB=warehouse
    networks:
      - cira-network
  
  cira-frontend:
    container_name: dashboard
    hostname: dashboard
    ports:
      - 4325:4325
    build:
      context: ./cira-frontend
      dockerfile: Dockerfile
    networks:
      - cira-network
    depends_on:
      - kafka

  factory:
    container_name: factory
    hostname: factory
    build:
      context: ./factory
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - cira-network
    depends_on:
      - kafka
  
  warehouse:
    container_name: warehouse
    hostname: warehouse
    build:
      context: ./warehouse
      dockerfile: Dockerfile
    ports:
      - "9010:9010"
    networks:
      - cira-network
    depends_on:
      - kafka

  logistics:
    container_name: logistics
    hostname: logistics
    build:
      context: ./logistics
      dockerfile: Dockerfile
    ports:
      - 3005:3005
    networks:
      - cira-network
    depends_on:
      - kafka

  machine-01:
    container_name: machine-01
    hostname: machine-01
    build:
      context: ./machine-01
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    networks:
      - cira-network
    depends_on:
      - kafka

volumes:
  db-warehouse:

networks:
  cira-network:
    driver: bridge
