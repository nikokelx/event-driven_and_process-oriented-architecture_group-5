version: "3"

services:
  zookeeper:
    image: "bitnami/zookeeper:latest"
    hostname: zookeeper
    networks:
      - cira-network
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: 'yes'

  kafka:
    image: "bitnami/kafka:latest"
    hostname: kafka
    container_name: kafka
    networks:
      - cira-network
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  
        #  schema-registry:
        #    image: confluentinc/cp-schema-registry:latest
        #    container_name: schema-registry
        #    hostname: schema-registry
        #    depends_on:
        #      - zookeeper
        #      - kafka
        #    networks:
        #      - cira-network
        #    environment:
        #      SCHEMA_REGISTRY_HOST_NAME: schema-registry
        #      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
        #      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
        #    ports:
        #      - "8081:8081"
        #  
  event-processor:
    container_name: event-processor
    hostname: event-processor
    build: 
      context: ./event-processor
      dockerfile: Dockerfile
    ports:
      - "4231:4231"
    networks:
      - cira-network
    depends_on:
      - kafka

  factory:
    container_name: factory
    hostname: factory
    build:
      context: ./factory
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - cira-network
    depends_on:
      - kafka
  
  warehouse:
    container_name: warehouse
    hostname: warehouse
    build:
      context: ./warehouse
      dockerfile: Dockerfile
    ports:
      - "9010:9010"
    networks:
      - cira-network
    depends_on:
      - kafka

  logistics:
    container_name: logistics
    hostname: logistics
    build:
      context: ./logistics
      dockerfile: Dockerfile
    ports:
      - 3005:3005
    networks:
      - cira-network
    depends_on:
      - kafka

  machine-01:
    container_name: machine-01
    hostname: machine-01
    build:
      context: ./machines
      dockerfile: Dockerfile
    ports:
      - "4001:4001"
    environment:
      MACHINE: "machine-01"
      SERVERPORT: 4001
      TEMPERATURE: 20.0
    networks:
      - cira-network
    depends_on:
      - kafka

  machine-02:
    container_name: machine-02
    hostname: machine-02
    build:
      context: ./machines
      dockerfile: Dockerfile
    ports:
      - 4002:4002
    environment:
      MACHINE: "machine-02"
      SERVERPORT: 4002
      TEMPERATURE: 69.0
    networks:
      - cira-network
    depends_on:
      - kafka
      
  machine-03:
    container_name: machine-03
    hostname: machine-03
    build:
      context: ./machines
      dockerfile: Dockerfile
    ports:
      - 4003:4003
    environment:
      MACHINE: "machine-03"
      SERVERPORT: 4003
      TEMPERATURE: 96.0
    networks:
      - cira-network
    depends_on:
      - kafka

networks:
  cira-network:
    driver: bridge
